# All-in-One BEAM Container with uv for fast dependency management
FROM python:3.12-slim

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies and uv
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gnupg \
    lsb-release \
    software-properties-common \
    sqlite3 \
    build-essential \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Install uv using the official method from uv documentation
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Set working directory
WORKDIR /app

# Copy dependency files first for better Docker layer caching
COPY pyproject.toml uv.lock ./

# Install Python dependencies using uv with caching
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --locked

# Copy source code, models, and demo data
COPY src/ ./src/
COPY models/ ./models/
COPY data/ ./data/
COPY demo/ ./demo/

# Create necessary directories
RUN mkdir -p /app/data/input \
    /app/data/input_parsed \
    /app/data/zeek \
    /app/data/mapper \
    /app/predictions \
    /app/models/custom_models \
    /var/lib/beam

# Set environment variables
ENV PYTHONPATH=/app/src
ENV PYTHONUNBUFFERED=1
ENV PATH="/app/.venv/bin:$PATH"

# Copy initialization scripts
COPY dockerfiles/scripts/ /app/scripts/
RUN chmod +x /app/scripts/*.sh

# Default command
CMD ["python", "-m", "beam", "--help"]
