# BEAM Hybrid Architecture Docker Services
# 
# In the hybrid architecture, BEAM runs natively with Python while Docker
# provides only the infrastructure services. This simplifies development
# and debugging while maintaining service isolation.
#
# To run BEAM: uv run python -m beam
# Services will auto-start as needed.

services:
  # Database services container (required for hybrid architecture)
  database:
    build:
      context: .
      dockerfile: docker/Dockerfile.database
    container_name: beam-database
    volumes:
      - ./data:/app/data
      - db-data:/var/lib/beam
    networks:
      - beam-network
    environment:
      - PYTHONPATH=/app/src

  # Zeek network analysis container (required for PCAP processing)
  zeek-processor:
    build:
      context: .
      dockerfile: docker/Dockerfile.zeek
    container_name: zeek-processor
    volumes:
      - ./data:/app/data
    networks:
      - beam-network
    command: ["tail", "-f", "/dev/null"]  # Keep container running

  # Model training container with TensorFlow support
  beam-trainer:
    build:
      context: .
      dockerfile: docker/Dockerfile.trainer
    container_name: beam-trainer
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./src:/app/src
      - ./predictions:/app/predictions
    networks:
      - beam-network
    environment:
      - PYTHONPATH=/app/src
      - TF_CPP_MIN_LOG_LEVEL=3
      - CUDA_VISIBLE_DEVICES=""
      - TF_ENABLE_ONEDNN_OPTS=0
      - TF_CPP_MIN_VLOG_LEVEL=3
    command: ["tail", "-f", "/dev/null"]  # Keep container running

  # Optional: Llama model service for local LLM (if not using Gemini)
  llama-model:
    image: ollama/ollama:latest
    container_name: beam-llama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - beam-network
    restart: unless-stopped
    profiles:
      - local-llm

volumes:
  db-data:
  ollama-data:

networks:
  beam-network:
    driver: bridge
