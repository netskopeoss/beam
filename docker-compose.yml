services:
  # Main BEAM application container
  beam-core:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.beam-core
    container_name: beam-core
    volumes:
      - beam-data:/app/data
      - beam-models:/app/models
      - beam-predictions:/app/predictions
      - ./data:/app/data:ro  # Mount host data directory as read-only
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=/app/src
    depends_on:
      - zeek-processor
      - database
    networks:
      - beam-network
    stdin_open: true
    tty: true

  # Zeek network analysis container
  zeek-processor:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.zeek
    container_name: zeek-processor
    volumes:
      - beam-data:/app/data
    networks:
      - beam-network
    command: ["tail", "-f", "/dev/null"]  # Keep container running

  # Database services container
  database:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.database
    container_name: beam-database
    volumes:
      - beam-data:/app/data
      - db-data:/var/lib/beam
    networks:
      - beam-network
    environment:
      - PYTHONPATH=/app/src

  # Optional: Single container for simpler deployments
  beam-all-in-one:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.all-in-one
    container_name: beam-all-in-one
    volumes:
      - beam-data:/app/data
      - beam-models:/app/models
      - beam-predictions:/app/predictions
      - ./data:/app/data:ro
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - PYTHONPATH=/app/src
    networks:
      - beam-network
    stdin_open: true
    tty: true
    profiles:
      - single-container

volumes:
  beam-data:
  beam-models:
  beam-predictions:
  db-data:

networks:
  beam-network:
    driver: bridge
